description: |
  Deploy Trellis, Bedrock and Sage(optional) via CircleCI
  Expecting Trellis and Bedrock to be 2 separate repositories https://github.com/roots/trellis/issues/883#issuecomment-329052189
  Expecting build steps do not require local Bedrock source code https://github.com/roots/trellis/pull/997 OR https://github.com/roots/trellis/pull/1030

parameters:
  # add-ssh-known-hosts
  known-hosts:
    type: string
    description: >
      comma separated hosts you expected to connect include VCS and the remote servers

  # prepare-trellis
  cache-version:
    type: string
    default: v6
    description: Change the default cache version if you need to clear the cache for any reason
  trellis-repo:
    type: string
    description: trellis repository. Must be a SSH URL
  trellis-branch:
    type: string
    description: trellis branch, commit hash or tag
    default: master
  vault-password:
    type: env_var_name
    description: ansible vault password environment variable name
    default: VAULT_PASSWORD
  vault-password-file-name:
    type: string
    description: ansible vault password file to use. Must be the same one in ansible.cfg
    default: .vault_pass

  # deploy
  site-env:
    type: string
    description: >
      the environment to deploy to, e.g: staging, production, etc.
      Ignored if using custom deploy command
  site-name:
    type: string
    description: >
      the WordPress site to deploy, as defined in wordpress_sites.
      Ignored if using custom deploy command

  # job
  executor-tag:
    type: string
    description: |
      Pick a specific itinerisltd/tiller-circleci image version tag:
      https://hub.docker.com/r/itinerisltd/tiller-circleci/tags
    default: base
  setup:
    type: steps
    description: Provide any optitonal steps you would like to run prior to deployment
    default: []
  deploy-command:
    type: string
    description: custom deploy command
    default: ""

executor:
  name: default
  tag: << parameters.executor-tag >>

steps:
  - print_dependency_versions
  - add_ssh_known_hosts:
      known-hosts: << parameters.known-hosts >>
  - prepare_trellis:
      cache-version: << parameters.cache-version >>
      trellis-repo: << parameters.trellis-repo >>
      trellis-branch: << parameters.trellis-branch >>
      vault-password: << parameters.vault-password >>
      vault-password-file-name: << parameters.vault-password-file-name >>
  - steps: << parameters.setup >>
  - when:
      condition:
        equal: [ "", << parameters.deploy-command >> ]
      steps:
        - deploy_trellis:
            site-env: << parameters.site-env >>
            site-name: << parameters.site-name >>
  - unless:
      condition:
        equal: [ "", << parameters.deploy-command >> ]
      steps:
        deploy: << parameters.deploy-command >>
